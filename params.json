{"name":"Neat.procedure","tagline":"A project to call stored procedures in a neat way","body":"#Neat.Procedure\r\nDo you think your life is harder only because you have to execute some stored procedures?\r\n\r\nSo Neat.Procedure is for you.\r\n\r\nA stored procedure executer in a neat way.\r\n\r\nWhy don't you call like this?\r\n\r\n\tobject oneScalarReturn = ProcedureExecuter.ExecuteScalar(\"YourSPName\");\r\n\r\nor like this?\r\n\t\r\n\tint count = ProcedureExecuter.ExecuteNonQuery(\"YourSPName\");\r\n\t\r\nor even like this?\r\n\r\n\tIEnumerable<YourDomainClass> list = ProcedureExecuter.ExecuteReader<YourDomainClass>(\"YourSPName\");\r\n\t\r\nNo mapping between classes and stored procedures results.\r\n\r\nJust that. Simple, fast and Neat.\r\n\r\nDuh... Aren't you forgetting stored procedure parameters?\r\n\r\nSure. You can pass it like arguments or like a key/value Dictionary<string, object>.\r\n\r\n\tstring arg1 = \"arg1\";\r\n\tint arg2 = 2;\r\n\tbool arg3 = true;\r\n\tDateTime arg4 = DateTime.Now;\r\n\tProcedureExecuter.ExecuteNonQuery(\"YourSPName\", arg1, arg2, arg3, arg4);\r\n\r\nor\r\n\r\n\tDictionary<string, object> parameters = new Dictionary<string, object>()\r\n\t{\r\n\t\t{ \"arg1\", \"arg1\" },\r\n\t\t{ \"arg2\", 2 },\r\n\t\t{ \"arg3\", true },\r\n\t\t{ \"arg4\", DateTime.Now }\r\n\t};\r\n\tProcedureExecuter.ExecuteNonQuery(\"YourSPName\", parameters);\r\n\r\nBy default, connectionStringName is Neat.Procedure.Settings.ConnectionString.Default\r\n\r\nBut can be changed by\r\n\t\r\n\tConnection.ConnectionStringName(\"YourConnectionStringNameHere\");\r\n\r\nor \r\n\r\n\tConnection.ConnectionString(\"server=(local)\\SQLEXPRESS;database=DBName;Integrated Security=SSPI\");\r\n\r\nYou can install it via NuGet\r\n\r\n\tInstall-Package Neat.Procedure\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}